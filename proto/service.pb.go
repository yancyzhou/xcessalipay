// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AliPayRequest struct {
	Mid                  string            `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Data                 map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AliPayRequest) Reset()         { *m = AliPayRequest{} }
func (m *AliPayRequest) String() string { return proto.CompactTextString(m) }
func (*AliPayRequest) ProtoMessage()    {}
func (*AliPayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_43e1785071250cad, []int{0}
}
func (m *AliPayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliPayRequest.Unmarshal(m, b)
}
func (m *AliPayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliPayRequest.Marshal(b, m, deterministic)
}
func (dst *AliPayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliPayRequest.Merge(dst, src)
}
func (m *AliPayRequest) XXX_Size() int {
	return xxx_messageInfo_AliPayRequest.Size(m)
}
func (m *AliPayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AliPayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AliPayRequest proto.InternalMessageInfo

func (m *AliPayRequest) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *AliPayRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type AliRefundRequest struct {
	RefundAmount         string   `protobuf:"bytes,1,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`
	OutTradeNo           string   `protobuf:"bytes,2,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AliRefundRequest) Reset()         { *m = AliRefundRequest{} }
func (m *AliRefundRequest) String() string { return proto.CompactTextString(m) }
func (*AliRefundRequest) ProtoMessage()    {}
func (*AliRefundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_43e1785071250cad, []int{1}
}
func (m *AliRefundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliRefundRequest.Unmarshal(m, b)
}
func (m *AliRefundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliRefundRequest.Marshal(b, m, deterministic)
}
func (dst *AliRefundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliRefundRequest.Merge(dst, src)
}
func (m *AliRefundRequest) XXX_Size() int {
	return xxx_messageInfo_AliRefundRequest.Size(m)
}
func (m *AliRefundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AliRefundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AliRefundRequest proto.InternalMessageInfo

func (m *AliRefundRequest) GetRefundAmount() string {
	if m != nil {
		return m.RefundAmount
	}
	return ""
}

func (m *AliRefundRequest) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

type AliPayResponse struct {
	Codes                int64             `protobuf:"varint,1,opt,name=codes,proto3" json:"codes,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AliPayResponse) Reset()         { *m = AliPayResponse{} }
func (m *AliPayResponse) String() string { return proto.CompactTextString(m) }
func (*AliPayResponse) ProtoMessage()    {}
func (*AliPayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_43e1785071250cad, []int{2}
}
func (m *AliPayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliPayResponse.Unmarshal(m, b)
}
func (m *AliPayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliPayResponse.Marshal(b, m, deterministic)
}
func (dst *AliPayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliPayResponse.Merge(dst, src)
}
func (m *AliPayResponse) XXX_Size() int {
	return xxx_messageInfo_AliPayResponse.Size(m)
}
func (m *AliPayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AliPayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AliPayResponse proto.InternalMessageInfo

func (m *AliPayResponse) GetCodes() int64 {
	if m != nil {
		return m.Codes
	}
	return 0
}

func (m *AliPayResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AliPayResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type AliPageResponse struct {
	Payurl               string   `protobuf:"bytes,1,opt,name=payurl,proto3" json:"payurl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AliPageResponse) Reset()         { *m = AliPageResponse{} }
func (m *AliPageResponse) String() string { return proto.CompactTextString(m) }
func (*AliPageResponse) ProtoMessage()    {}
func (*AliPageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_43e1785071250cad, []int{3}
}
func (m *AliPageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliPageResponse.Unmarshal(m, b)
}
func (m *AliPageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliPageResponse.Marshal(b, m, deterministic)
}
func (dst *AliPageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliPageResponse.Merge(dst, src)
}
func (m *AliPageResponse) XXX_Size() int {
	return xxx_messageInfo_AliPageResponse.Size(m)
}
func (m *AliPageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AliPageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AliPageResponse proto.InternalMessageInfo

func (m *AliPageResponse) GetPayurl() string {
	if m != nil {
		return m.Payurl
	}
	return ""
}

type AliRefoundResponse struct {
	Sign                 string                       `protobuf:"bytes,14,opt,name=sign,proto3" json:"sign,omitempty"`
	Code                 string                       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	SubCode              string                       `protobuf:"bytes,3,opt,name=subCode,proto3" json:"subCode,omitempty"`
	SubMsg               string                       `protobuf:"bytes,4,opt,name=subMsg,proto3" json:"subMsg,omitempty"`
	TradeNo              string                       `protobuf:"bytes,5,opt,name=tradeNo,proto3" json:"tradeNo,omitempty"`
	OutTradeNo           string                       `protobuf:"bytes,6,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	BuyerLogonId         string                       `protobuf:"bytes,7,opt,name=buyerLogonId,proto3" json:"buyerLogonId,omitempty"`
	BuyerUserId          string                       `protobuf:"bytes,8,opt,name=buyerUserId,proto3" json:"buyerUserId,omitempty"`
	FundChange           string                       `protobuf:"bytes,9,opt,name=fundChange,proto3" json:"fundChange,omitempty"`
	RefundFee            string                       `protobuf:"bytes,10,opt,name=refundFee,proto3" json:"refundFee,omitempty"`
	GmtRefundPay         string                       `protobuf:"bytes,11,opt,name=gmtRefundPay,proto3" json:"gmtRefundPay,omitempty"`
	StoreName            string                       `protobuf:"bytes,12,opt,name=storeName,proto3" json:"storeName,omitempty"`
	RefundDetailItemList map[string]*RefundDetailItem `protobuf:"bytes,13,rep,name=refundDetailItemList,proto3" json:"refundDetailItemList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *AliRefoundResponse) Reset()         { *m = AliRefoundResponse{} }
func (m *AliRefoundResponse) String() string { return proto.CompactTextString(m) }
func (*AliRefoundResponse) ProtoMessage()    {}
func (*AliRefoundResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_43e1785071250cad, []int{4}
}
func (m *AliRefoundResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliRefoundResponse.Unmarshal(m, b)
}
func (m *AliRefoundResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliRefoundResponse.Marshal(b, m, deterministic)
}
func (dst *AliRefoundResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliRefoundResponse.Merge(dst, src)
}
func (m *AliRefoundResponse) XXX_Size() int {
	return xxx_messageInfo_AliRefoundResponse.Size(m)
}
func (m *AliRefoundResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AliRefoundResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AliRefoundResponse proto.InternalMessageInfo

func (m *AliRefoundResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *AliRefoundResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AliRefoundResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AliRefoundResponse) GetSubCode() string {
	if m != nil {
		return m.SubCode
	}
	return ""
}

func (m *AliRefoundResponse) GetSubMsg() string {
	if m != nil {
		return m.SubMsg
	}
	return ""
}

func (m *AliRefoundResponse) GetTradeNo() string {
	if m != nil {
		return m.TradeNo
	}
	return ""
}

func (m *AliRefoundResponse) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *AliRefoundResponse) GetBuyerLogonId() string {
	if m != nil {
		return m.BuyerLogonId
	}
	return ""
}

func (m *AliRefoundResponse) GetBuyerUserId() string {
	if m != nil {
		return m.BuyerUserId
	}
	return ""
}

func (m *AliRefoundResponse) GetFundChange() string {
	if m != nil {
		return m.FundChange
	}
	return ""
}

func (m *AliRefoundResponse) GetRefundFee() string {
	if m != nil {
		return m.RefundFee
	}
	return ""
}

func (m *AliRefoundResponse) GetGmtRefundPay() string {
	if m != nil {
		return m.GmtRefundPay
	}
	return ""
}

func (m *AliRefoundResponse) GetStoreName() string {
	if m != nil {
		return m.StoreName
	}
	return ""
}

func (m *AliRefoundResponse) GetRefundDetailItemList() map[string]*RefundDetailItem {
	if m != nil {
		return m.RefundDetailItemList
	}
	return nil
}

type AliPayFundTransToAccountTransferResponse struct {
	Sign                 string   `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	SubCode              string   `protobuf:"bytes,3,opt,name=sub_code,json=subCode,proto3" json:"sub_code,omitempty"`
	SubMsg               string   `protobuf:"bytes,4,opt,name=sub_msg,json=subMsg,proto3" json:"sub_msg,omitempty"`
	OutBizNo             string   `protobuf:"bytes,5,opt,name=out_biz_no,json=outBizNo,proto3" json:"out_biz_no,omitempty"`
	OrderId              string   `protobuf:"bytes,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PayDate              string   `protobuf:"bytes,7,opt,name=pay_date,json=payDate,proto3" json:"pay_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AliPayFundTransToAccountTransferResponse) Reset() {
	*m = AliPayFundTransToAccountTransferResponse{}
}
func (m *AliPayFundTransToAccountTransferResponse) String() string { return proto.CompactTextString(m) }
func (*AliPayFundTransToAccountTransferResponse) ProtoMessage()    {}
func (*AliPayFundTransToAccountTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_43e1785071250cad, []int{5}
}
func (m *AliPayFundTransToAccountTransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliPayFundTransToAccountTransferResponse.Unmarshal(m, b)
}
func (m *AliPayFundTransToAccountTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliPayFundTransToAccountTransferResponse.Marshal(b, m, deterministic)
}
func (dst *AliPayFundTransToAccountTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliPayFundTransToAccountTransferResponse.Merge(dst, src)
}
func (m *AliPayFundTransToAccountTransferResponse) XXX_Size() int {
	return xxx_messageInfo_AliPayFundTransToAccountTransferResponse.Size(m)
}
func (m *AliPayFundTransToAccountTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AliPayFundTransToAccountTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AliPayFundTransToAccountTransferResponse proto.InternalMessageInfo

func (m *AliPayFundTransToAccountTransferResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *AliPayFundTransToAccountTransferResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AliPayFundTransToAccountTransferResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AliPayFundTransToAccountTransferResponse) GetSubCode() string {
	if m != nil {
		return m.SubCode
	}
	return ""
}

func (m *AliPayFundTransToAccountTransferResponse) GetSubMsg() string {
	if m != nil {
		return m.SubMsg
	}
	return ""
}

func (m *AliPayFundTransToAccountTransferResponse) GetOutBizNo() string {
	if m != nil {
		return m.OutBizNo
	}
	return ""
}

func (m *AliPayFundTransToAccountTransferResponse) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *AliPayFundTransToAccountTransferResponse) GetPayDate() string {
	if m != nil {
		return m.PayDate
	}
	return ""
}

type RefundDetailItem struct {
	FundChannel          string   `protobuf:"bytes,1,opt,name=fundChannel,proto3" json:"fundChannel,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	RealAmount           string   `protobuf:"bytes,3,opt,name=realAmount,proto3" json:"realAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundDetailItem) Reset()         { *m = RefundDetailItem{} }
func (m *RefundDetailItem) String() string { return proto.CompactTextString(m) }
func (*RefundDetailItem) ProtoMessage()    {}
func (*RefundDetailItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_43e1785071250cad, []int{6}
}
func (m *RefundDetailItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundDetailItem.Unmarshal(m, b)
}
func (m *RefundDetailItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundDetailItem.Marshal(b, m, deterministic)
}
func (dst *RefundDetailItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundDetailItem.Merge(dst, src)
}
func (m *RefundDetailItem) XXX_Size() int {
	return xxx_messageInfo_RefundDetailItem.Size(m)
}
func (m *RefundDetailItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundDetailItem.DiscardUnknown(m)
}

var xxx_messageInfo_RefundDetailItem proto.InternalMessageInfo

func (m *RefundDetailItem) GetFundChannel() string {
	if m != nil {
		return m.FundChannel
	}
	return ""
}

func (m *RefundDetailItem) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *RefundDetailItem) GetRealAmount() string {
	if m != nil {
		return m.RealAmount
	}
	return ""
}

func init() {
	proto.RegisterType((*AliPayRequest)(nil), "AliPayRequest")
	proto.RegisterMapType((map[string]string)(nil), "AliPayRequest.DataEntry")
	proto.RegisterType((*AliRefundRequest)(nil), "AliRefundRequest")
	proto.RegisterType((*AliPayResponse)(nil), "AliPayResponse")
	proto.RegisterMapType((map[string]string)(nil), "AliPayResponse.DataEntry")
	proto.RegisterType((*AliPageResponse)(nil), "AliPageResponse")
	proto.RegisterType((*AliRefoundResponse)(nil), "AliRefoundResponse")
	proto.RegisterMapType((map[string]*RefundDetailItem)(nil), "AliRefoundResponse.RefundDetailItemListEntry")
	proto.RegisterType((*AliPayFundTransToAccountTransferResponse)(nil), "AliPayFundTransToAccountTransferResponse")
	proto.RegisterType((*RefundDetailItem)(nil), "RefundDetailItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AliPayServiceClient is the client RPC for AliPayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AliPayServiceClient interface {
	// Sends a greeting
	// APP支付
	TradeAppPay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPayResponse, error)
	// PC页面支付
	TradePagePay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPageResponse, error)
	// 手机页面支付
	TradeWapPay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPageResponse, error)
	// 退款
	TradeRefund(ctx context.Context, in *AliRefundRequest, opts ...grpc.CallOption) (*AliRefoundResponse, error)
	FundTransToAccountTransfer(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPayFundTransToAccountTransferResponse, error)
}

type aliPayServiceClient struct {
	cc *grpc.ClientConn
}

func NewAliPayServiceClient(cc *grpc.ClientConn) AliPayServiceClient {
	return &aliPayServiceClient{cc}
}

func (c *aliPayServiceClient) TradeAppPay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPayResponse, error) {
	out := new(AliPayResponse)
	err := c.cc.Invoke(ctx, "/AliPayService/TradeAppPay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aliPayServiceClient) TradePagePay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPageResponse, error) {
	out := new(AliPageResponse)
	err := c.cc.Invoke(ctx, "/AliPayService/TradePagePay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aliPayServiceClient) TradeWapPay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPageResponse, error) {
	out := new(AliPageResponse)
	err := c.cc.Invoke(ctx, "/AliPayService/TradeWapPay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aliPayServiceClient) TradeRefund(ctx context.Context, in *AliRefundRequest, opts ...grpc.CallOption) (*AliRefoundResponse, error) {
	out := new(AliRefoundResponse)
	err := c.cc.Invoke(ctx, "/AliPayService/TradeRefund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aliPayServiceClient) FundTransToAccountTransfer(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPayFundTransToAccountTransferResponse, error) {
	out := new(AliPayFundTransToAccountTransferResponse)
	err := c.cc.Invoke(ctx, "/AliPayService/FundTransToAccountTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AliPayServiceServer is the server RPC for AliPayService service.
type AliPayServiceServer interface {
	// Sends a greeting
	// APP支付
	TradeAppPay(context.Context, *AliPayRequest) (*AliPayResponse, error)
	// PC页面支付
	TradePagePay(context.Context, *AliPayRequest) (*AliPageResponse, error)
	// 手机页面支付
	TradeWapPay(context.Context, *AliPayRequest) (*AliPageResponse, error)
	// 退款
	TradeRefund(context.Context, *AliRefundRequest) (*AliRefoundResponse, error)
	FundTransToAccountTransfer(context.Context, *AliPayRequest) (*AliPayFundTransToAccountTransferResponse, error)
}

func RegisterAliPayServiceServer(s *grpc.Server, srv AliPayServiceServer) {
	s.RegisterService(&_AliPayService_serviceDesc, srv)
}

func _AliPayService_TradeAppPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliPayServiceServer).TradeAppPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AliPayService/TradeAppPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliPayServiceServer).TradeAppPay(ctx, req.(*AliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AliPayService_TradePagePay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliPayServiceServer).TradePagePay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AliPayService/TradePagePay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliPayServiceServer).TradePagePay(ctx, req.(*AliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AliPayService_TradeWapPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliPayServiceServer).TradeWapPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AliPayService/TradeWapPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliPayServiceServer).TradeWapPay(ctx, req.(*AliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AliPayService_TradeRefund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AliRefundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliPayServiceServer).TradeRefund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AliPayService/TradeRefund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliPayServiceServer).TradeRefund(ctx, req.(*AliRefundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AliPayService_FundTransToAccountTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliPayServiceServer).FundTransToAccountTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AliPayService/FundTransToAccountTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliPayServiceServer).FundTransToAccountTransfer(ctx, req.(*AliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AliPayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AliPayService",
	HandlerType: (*AliPayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TradeAppPay",
			Handler:    _AliPayService_TradeAppPay_Handler,
		},
		{
			MethodName: "TradePagePay",
			Handler:    _AliPayService_TradePagePay_Handler,
		},
		{
			MethodName: "TradeWapPay",
			Handler:    _AliPayService_TradeWapPay_Handler,
		},
		{
			MethodName: "TradeRefund",
			Handler:    _AliPayService_TradeRefund_Handler,
		},
		{
			MethodName: "FundTransToAccountTransfer",
			Handler:    _AliPayService_FundTransToAccountTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_43e1785071250cad) }

var fileDescriptor_service_43e1785071250cad = []byte{
	// 696 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xdd, 0x4e, 0x13, 0x41,
	0x14, 0xc7, 0x5b, 0x5a, 0x68, 0x7b, 0xca, 0x47, 0x19, 0x89, 0x0e, 0x0d, 0x31, 0x64, 0x6f, 0x84,
	0x44, 0x36, 0x5a, 0x2f, 0x30, 0xde, 0x55, 0x90, 0xa4, 0x09, 0x12, 0x52, 0x51, 0xa3, 0x37, 0xcd,
	0xb4, 0x7b, 0x58, 0x37, 0xb4, 0x3b, 0xeb, 0xcc, 0x2c, 0xc9, 0xf2, 0x04, 0x3e, 0x8a, 0x0f, 0x61,
	0xe2, 0x0b, 0xf9, 0x10, 0x66, 0x3e, 0x16, 0xb6, 0x1f, 0x24, 0x98, 0x78, 0x37, 0xe7, 0xdf, 0x39,
	0xff, 0x39, 0x73, 0xe6, 0xb7, 0xa7, 0xb0, 0x26, 0x51, 0x5c, 0x47, 0x23, 0xf4, 0x13, 0xc1, 0x15,
	0xf7, 0x7e, 0x94, 0x61, 0xad, 0x3b, 0x8e, 0xce, 0x59, 0xd6, 0xc7, 0xef, 0x29, 0x4a, 0x45, 0x5a,
	0x50, 0x99, 0x44, 0x01, 0x2d, 0xef, 0x96, 0xf7, 0x1a, 0x7d, 0xbd, 0x24, 0xcf, 0xa1, 0x1a, 0x30,
	0xc5, 0x68, 0x65, 0xb7, 0xb2, 0xd7, 0xec, 0x50, 0x7f, 0x6a, 0xbf, 0x7f, 0xcc, 0x14, 0x7b, 0x17,
	0x2b, 0x91, 0xf5, 0xcd, 0xae, 0xf6, 0x21, 0x34, 0x6e, 0x25, 0x6d, 0x76, 0x85, 0x59, 0x6e, 0x76,
	0x85, 0x19, 0xd9, 0x82, 0xe5, 0x6b, 0x36, 0x4e, 0x91, 0x2e, 0x19, 0xcd, 0x06, 0x6f, 0x96, 0x5e,
	0x97, 0xbd, 0x4f, 0xd0, 0xea, 0x8e, 0xa3, 0x3e, 0x5e, 0xa6, 0x71, 0x90, 0x17, 0xe3, 0xc1, 0xaa,
	0x30, 0x42, 0x77, 0xc2, 0xd3, 0x58, 0x39, 0xa3, 0x29, 0x8d, 0x3c, 0x05, 0xe0, 0xa9, 0xba, 0x10,
	0x2c, 0xc0, 0x33, 0xee, 0x6c, 0x0b, 0x8a, 0xf7, 0xb3, 0x0c, 0xeb, 0x79, 0xc9, 0x32, 0xe1, 0xb1,
	0x44, 0x5d, 0xc4, 0x88, 0x07, 0x28, 0x8d, 0x5f, 0xa5, 0x6f, 0x03, 0x42, 0xa1, 0x36, 0x41, 0x29,
	0x59, 0x98, 0x17, 0x97, 0x87, 0xe4, 0x60, 0xaa, 0x03, 0xdb, 0xfe, 0xb4, 0xdd, 0xff, 0x6b, 0xc1,
	0x3e, 0x6c, 0x18, 0xeb, 0x10, 0x6f, 0x4b, 0x7d, 0x0c, 0x2b, 0x09, 0xcb, 0x52, 0x31, 0x76, 0x0e,
	0x2e, 0xf2, 0x7e, 0x57, 0x81, 0xd8, 0x76, 0x71, 0xd3, 0x2f, 0xb7, 0x9d, 0x40, 0x55, 0x46, 0x61,
	0x4c, 0xd7, 0xcd, 0x66, 0xb3, 0xd6, 0x9a, 0xbe, 0xa0, 0x33, 0x30, 0x6b, 0xf3, 0xca, 0x32, 0x74,
	0x15, 0xe8, 0xa5, 0xbe, 0xbd, 0x4c, 0x87, 0x47, 0x7a, 0x63, 0xc5, 0xde, 0xde, 0x85, 0xba, 0x04,
	0x99, 0x0e, 0xdf, 0xcb, 0x90, 0x56, 0x6d, 0x09, 0x36, 0xd2, 0x19, 0xca, 0x75, 0x7d, 0xd9, 0x66,
	0xb8, 0x70, 0xe6, 0x49, 0x56, 0x66, 0x9f, 0x44, 0x3f, 0xeb, 0x30, 0xcd, 0x50, 0x9c, 0xf2, 0x90,
	0xc7, 0xbd, 0x80, 0xd6, 0xec, 0xb3, 0x16, 0x35, 0xb2, 0x0b, 0x4d, 0x13, 0x7f, 0x94, 0x28, 0x7a,
	0x01, 0xad, 0x9b, 0x2d, 0x45, 0x49, 0x9f, 0xa2, 0x31, 0x38, 0xfa, 0xc6, 0xe2, 0x10, 0x69, 0xc3,
	0x9e, 0x72, 0xa7, 0x90, 0x1d, 0x68, 0x58, 0x50, 0x4e, 0x10, 0x29, 0x98, 0x9f, 0xef, 0x04, 0x5d,
	0x43, 0x38, 0x51, 0x16, 0xb7, 0x73, 0x96, 0xd1, 0xa6, 0xad, 0xa1, 0xa8, 0x69, 0x07, 0xa9, 0xb8,
	0xc0, 0x33, 0x36, 0x41, 0xba, 0x6a, 0x1d, 0x6e, 0x05, 0xc2, 0x60, 0xcb, 0xda, 0x1d, 0xa3, 0x62,
	0xd1, 0xb8, 0xa7, 0x70, 0x72, 0x1a, 0x49, 0x45, 0xd7, 0x0c, 0x25, 0x07, 0xfe, 0xfc, 0xf3, 0xf8,
	0xfd, 0x05, 0xfb, 0x2d, 0x39, 0x0b, 0xad, 0xda, 0x5f, 0x61, 0xfb, 0xde, 0x94, 0x05, 0x64, 0x3d,
	0x2b, 0x92, 0xd5, 0xec, 0x6c, 0xce, 0x9d, 0x57, 0x84, 0xed, 0x4f, 0x19, 0xf6, 0x2c, 0xc8, 0x27,
	0x69, 0x1c, 0x5c, 0x08, 0x16, 0xcb, 0x0b, 0xde, 0x1d, 0x8d, 0xf4, 0x47, 0x65, 0xa2, 0x4b, 0x14,
	0x73, 0x5c, 0xd5, 0xff, 0x99, 0xab, 0x6d, 0xa8, 0xcb, 0x74, 0x38, 0x18, 0x2d, 0x00, 0xeb, 0x89,
	0x41, 0x6e, 0x30, 0x99, 0x23, 0x6b, 0xc7, 0xf0, 0x33, 0x18, 0x46, 0x37, 0x83, 0x38, 0x87, 0xab,
	0xce, 0x53, 0xf5, 0x36, 0xba, 0x39, 0xe3, 0xda, 0x91, 0x8b, 0x00, 0xc5, 0x20, 0x0a, 0x1c, 0x5b,
	0x35, 0x13, 0xf7, 0x02, 0xfd, 0x53, 0xc2, 0xb2, 0x41, 0xc0, 0x14, 0x3a, 0xa8, 0x6a, 0x09, 0xcb,
	0x8e, 0x99, 0x42, 0x6f, 0x0c, 0xad, 0xd9, 0x6e, 0x68, 0xc6, 0x72, 0x5e, 0x62, 0xcc, 0xbf, 0xb0,
	0xa2, 0xa4, 0xd9, 0x67, 0x76, 0xf4, 0xd8, 0x2b, 0xb9, 0x48, 0xb3, 0x27, 0x90, 0x8d, 0xdd, 0x58,
	0xb2, 0xf7, 0x2a, 0x28, 0x9d, 0x5f, 0x4b, 0xf9, 0x5c, 0xfd, 0x60, 0xe7, 0x2d, 0x79, 0x01, 0x4d,
	0x83, 0x7f, 0x37, 0x49, 0x34, 0x5a, 0xeb, 0xd3, 0x63, 0xb4, 0xbd, 0x31, 0x33, 0x54, 0xbc, 0x12,
	0xe9, 0xc0, 0xaa, 0xc9, 0xd0, 0xf3, 0x60, 0x51, 0x4a, 0xcb, 0x9f, 0x19, 0x16, 0x5e, 0x89, 0xbc,
	0x74, 0xa7, 0x7c, 0x66, 0xc9, 0x43, 0x53, 0x0e, 0x5d, 0x8a, 0xed, 0x0e, 0xd9, 0xf4, 0x67, 0xa7,
	0x70, 0xfb, 0xd1, 0x02, 0x94, 0xbd, 0x12, 0xf9, 0x02, 0xed, 0xfb, 0xc9, 0x99, 0x3b, 0x7a, 0xdf,
	0x7f, 0x28, 0x6c, 0x5e, 0x69, 0xb8, 0x62, 0xfe, 0x9d, 0x5e, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x94, 0x2c, 0x3a, 0x19, 0xae, 0x06, 0x00, 0x00,
}
